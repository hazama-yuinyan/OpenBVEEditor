  VariousTools.cpp
  CodeAssistant.cpp
  SearchComponents.cpp
c:\users\ryouta\documents\visual studio 2010\projects\openbveeditor\openbveeditor\source\searchcomponents.cpp : warning C4819: ファイルは、現在のコード ページ (932) で表示できない文字を含んでいます。データの損失を防ぐために、ファイルを Unicode 形式で保存してください。
c:\juce_1_54\juce\juce_amalgamated.h(10444): warning C4150: 'Preferences' 型を削除するため delete 演算子が呼び出されましたが、定義がありません。
          c:\users\ryouta\documents\visual studio 2010\projects\openbveeditor\openbveeditor\source\maincomponent.h(38) : 'Preferences' の宣言を確認してください。
          c:\juce_1_54\juce\juce_amalgamated.h(10444): クラス テンプレート のメンバー関数 'juce::ScopedPointer<ObjectType>::~ScopedPointer(void)' のコンパイル中
          with
          [
              ObjectType=Preferences
          ]
          c:\users\ryouta\documents\visual studio 2010\projects\openbveeditor\openbveeditor\source\maincomponent.h(93) : コンパイルされたクラスの テンプレート のインスタンス化 'juce::ScopedPointer<ObjectType>' の参照を確認してください
          with
          [
              ObjectType=Preferences
          ]
c:\program files (x86)\microsoft visual studio 10.0\vc\include\xutility(2813): warning C4996: 'std::_Fill_n': Function call with parameters that may be unsafe - this call relies on the caller to check that the passed values are correct. To disable this warning, use -D_SCL_SECURE_NO_WARNINGS. See documentation on how to use Visual C++ 'Checked Iterators'
          c:\program files (x86)\microsoft visual studio 10.0\vc\include\xutility(2799) : 'std::_Fill_n' の宣言を確認してください。
          c:\boost_1_48_0\boost_1_48_0\boost\xpressive\detail\utility\sequence_stack.hpp(225) : コンパイルされたクラスの テンプレート のインスタンス化 'void std::fill_n<T*,size_t,T>(_OutIt,_Diff,const _Ty &)' の参照を確認してください
          with
          [
              T=boost::xpressive::detail::sub_match_impl<std::_String_const_iterator<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t>>>,
              _OutIt=boost::xpressive::detail::sub_match_impl<std::_String_const_iterator<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t>>> *,
              _Diff=size_t,
              _Ty=boost::xpressive::detail::sub_match_impl<std::_String_const_iterator<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t>>>
          ]
          c:\boost_1_48_0\boost_1_48_0\boost\xpressive\detail\utility\sequence_stack.hpp(223): クラス テンプレート のメンバー関数 'boost::xpressive::detail::sub_match_impl<BidiIter> *boost::xpressive::detail::sequence_stack<T>::push_sequence(size_t,const T &,boost::xpressive::detail::fill_t)' のコンパイル中
          with
          [
              BidiIter=std::_String_const_iterator<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t>>,
              T=boost::xpressive::detail::sub_match_impl<std::_String_const_iterator<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t>>>
          ]
          c:\boost_1_48_0\boost_1_48_0\boost\xpressive\match_results.hpp(96) : コンパイルされたクラスの テンプレート のインスタンス化 'boost::xpressive::detail::sequence_stack<T>' の参照を確認してください
          with
          [
              T=boost::xpressive::detail::sub_match_impl<std::_String_const_iterator<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t>>>
          ]
          c:\boost_1_48_0\boost_1_48_0\boost\xpressive\detail\core\state.hpp(150) : コンパイルされたクラスの テンプレート のインスタンス化 'boost::xpressive::detail::results_extras<BidiIter>' の参照を確認してください
          with
          [
              BidiIter=std::_String_const_iterator<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t>>
          ]
          c:\boost_1_48_0\boost_1_48_0\boost\xpressive\detail\core\state.hpp(135): クラス テンプレート のメンバー関数 'boost::xpressive::detail::match_state<BidiIter>::match_state(BidiIter,BidiIter,boost::xpressive::match_results<BidiIter> &,const boost::xpressive::detail::regex_impl<BidiIter> &,boost::xpressive::regex_constants::match_flag_type)' のコンパイル中
          with
          [
              BidiIter=std::_String_const_iterator<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t>>
          ]
          c:\boost_1_48_0\boost_1_48_0\boost\xpressive\regex_iterator.hpp(86) : コンパイルされたクラスの テンプレート のインスタンス化 'boost::xpressive::detail::match_state<BidiIter>' の参照を確認してください
          with
          [
              BidiIter=std::_String_const_iterator<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t>>
          ]
          c:\boost_1_48_0\boost_1_48_0\boost\xpressive\regex_iterator.hpp(125) : コンパイルされたクラスの テンプレート のインスタンス化 'boost::xpressive::detail::regex_iterator_impl<BidiIter>' の参照を確認してください
          with
          [
              BidiIter=std::_String_const_iterator<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t>>
          ]
          c:\boost_1_48_0\boost_1_48_0\boost\xpressive\regex_iterator.hpp(115): クラス テンプレート のメンバー関数 'boost::xpressive::regex_iterator<BidiIter>::regex_iterator(BidiIter,BidiIter,const boost::xpressive::basic_regex<BidiIter> &,boost::xpressive::regex_constants::match_flag_type)' のコンパイル中
          with
          [
              BidiIter=std::_String_const_iterator<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t>>
          ]
          c:\users\ryouta\documents\visual studio 2010\projects\openbveeditor\openbveeditor\source\searchcomponents.h(44) : コンパイルされたクラスの テンプレート のインスタンス化 'boost::xpressive::regex_iterator<BidiIter>' の参照を確認してください
          with
          [
              BidiIter=std::_String_const_iterator<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t>>
          ]
c:\program files (x86)\microsoft visual studio 10.0\vc\include\xutility(2813): warning C4996: 'std::_Fill_n': Function call with parameters that may be unsafe - this call relies on the caller to check that the passed values are correct. To disable this warning, use -D_SCL_SECURE_NO_WARNINGS. See documentation on how to use Visual C++ 'Checked Iterators'
          c:\program files (x86)\microsoft visual studio 10.0\vc\include\xutility(2799) : 'std::_Fill_n' の宣言を確認してください。
          c:\boost_1_48_0\boost_1_48_0\boost\xpressive\detail\utility\boyer_moore.hpp(61) : コンパイルされたクラスの テンプレート のインスタンス化 'void std::fill_n<unsigned char*,int,unsigned char>(_OutIt,_Diff,const _Ty &)' の参照を確認してください
          with
          [
              _OutIt=unsigned char *,
              _Diff=int,
              _Ty=unsigned char
          ]
          c:\boost_1_48_0\boost_1_48_0\boost\xpressive\detail\utility\boyer_moore.hpp(48): クラス テンプレート のメンバー関数 'boost::xpressive::detail::boyer_moore<BidiIter,Traits>::boyer_moore(const wchar_t *,const wchar_t *,const Traits &,bool)' のコンパイル中
          with
          [
              BidiIter=std::_String_const_iterator<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t>>,
              Traits=boost::xpressive::regex_traits<wchar_t>
          ]
          c:\boost_1_48_0\boost_1_48_0\boost\xpressive\detail\core\finder.hpp(55) : コンパイルされたクラスの テンプレート のインスタンス化 'boost::xpressive::detail::boyer_moore<BidiIter,Traits>' の参照を確認してください
          with
          [
              BidiIter=std::_String_const_iterator<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t>>,
              Traits=boost::xpressive::regex_traits<wchar_t>
          ]
          c:\boost_1_48_0\boost_1_48_0\boost\xpressive\detail\core\optimize.hpp(80) : コンパイルされたクラスの テンプレート のインスタンス化 'boost::xpressive::detail::boyer_moore_finder<BidiIter,Traits>' の参照を確認してください
          with
          [
              BidiIter=std::_String_const_iterator<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t>>,
              Traits=boost::xpressive::regex_traits<wchar_t>
          ]
          c:\boost_1_48_0\boost_1_48_0\boost\xpressive\detail\core\optimize.hpp(110) : コンパイルされたクラスの テンプレート のインスタンス化 'boost::intrusive_ptr<T> boost::xpressive::detail::optimize_regex<BidiIter,Traits>(const boost::xpressive::detail::xpression_peeker<Char> &,const Traits &,boost::mpl::true_)' の参照を確認してください
          with
          [
              T=boost::xpressive::detail::finder<std::_String_const_iterator<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t>>>,
              BidiIter=std::_String_const_iterator<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t>>,
              Traits=boost::xpressive::regex_traits<wchar_t>,
              Char=wchar_t
          ]
          c:\boost_1_48_0\boost_1_48_0\boost\xpressive\regex_compiler.hpp(219) : コンパイルされたクラスの テンプレート のインスタンス化 'void boost::xpressive::detail::common_compile<BidiIter,boost::xpressive::regex_traits<Char>>(const boost::intrusive_ptr<T> &,boost::xpressive::detail::regex_impl<BidiIter> &,const Traits &)' の参照を確認してください
          with
          [
              BidiIter=std::_String_const_iterator<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t>>,
              Char=wchar_t,
              T=const boost::xpressive::detail::matchable_ex<std::_String_const_iterator<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t>>>,
              Traits=boost::xpressive::regex_traits<wchar_t>
          ]
          c:\boost_1_48_0\boost_1_48_0\boost\xpressive\regex_compiler.hpp(120) : コンパイルされたクラスの テンプレート のインスタンス化 'boost::xpressive::basic_regex<BidiIter> boost::xpressive::regex_compiler<BidiIter>::compile_<InputIter>(FwdIter,FwdIter,boost::xpressive::regex_compiler<BidiIter>::flag_type,std::forward_iterator_tag)' の参照を確認してください
          with
          [
              BidiIter=std::_String_const_iterator<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t>>,
              InputIter=const wchar_t *,
              FwdIter=const wchar_t *
          ]
          c:\boost_1_48_0\boost_1_48_0\boost\xpressive\regex_compiler.hpp(139) : コンパイルされたクラスの テンプレート のインスタンス化 'boost::xpressive::basic_regex<BidiIter> boost::xpressive::regex_compiler<BidiIter>::compile<const wchar_t*>(InputIter,InputIter,boost::xpressive::regex_compiler<BidiIter>::flag_type)' の参照を確認してください
          with
          [
              BidiIter=std::_String_const_iterator<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t>>,
              InputIter=const wchar_t *
          ]
          c:\boost_1_48_0\boost_1_48_0\boost\xpressive\regex_compiler.hpp(136): クラス テンプレート のメンバー関数 'boost::xpressive::basic_regex<BidiIter> boost::xpressive::regex_compiler<BidiIter>::compile(const wchar_t *,boost::xpressive::regex_compiler<BidiIter>::flag_type)' のコンパイル中
          with
          [
              BidiIter=std::_String_const_iterator<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t>>
          ]
          c:\boost_1_48_0\boost_1_48_0\boost\xpressive\basic_regex.hpp(200) : コンパイルされたクラスの テンプレート のインスタンス化 'boost::xpressive::regex_compiler<BidiIter>' の参照を確認してください
          with
          [
              BidiIter=std::_String_const_iterator<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t>>
          ]
          c:\boost_1_48_0\boost_1_48_0\boost\xpressive\basic_regex.hpp(199): クラス テンプレート のメンバー関数 'boost::xpressive::basic_regex<BidiIter> boost::xpressive::basic_regex<BidiIter>::compile(const wchar_t *,boost::xpressive::basic_regex<BidiIter>::flag_type)' のコンパイル中
          with
          [
              BidiIter=std::_String_const_iterator<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t>>
          ]
          c:\users\ryouta\documents\visual studio 2010\projects\openbveeditor\openbveeditor\source\searchcomponents.cpp(46) : コンパイルされたクラスの テンプレート のインスタンス化 'boost::xpressive::basic_regex<BidiIter>' の参照を確認してください
          with
          [
              BidiIter=std::_String_const_iterator<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t>>
          ]
c:\program files (x86)\microsoft visual studio 10.0\vc\include\xutility(2239): warning C4996: 'std::_Copy_impl': Function call with parameters that may be unsafe - this call relies on the caller to check that the passed values are correct. To disable this warning, use -D_SCL_SECURE_NO_WARNINGS. See documentation on how to use Visual C++ 'Checked Iterators'
          c:\program files (x86)\microsoft visual studio 10.0\vc\include\xutility(2224) : 'std::_Copy_impl' の宣言を確認してください。
          c:\boost_1_48_0\boost_1_48_0\boost\xpressive\detail\core\sub_match_vector.hpp(162) : コンパイルされたクラスの テンプレート のインスタンス化 '_OutIt std::copy<boost::xpressive::detail::sub_match_impl<BidiIter>*,boost::xpressive::detail::sub_match_impl<BidiIter>*>(_InIt,_InIt,_OutIt)' の参照を確認してください
          with
          [
              _OutIt=boost::xpressive::detail::sub_match_impl<std::_String_const_iterator<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t>>> *,
              BidiIter=std::_String_const_iterator<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t>>,
              _InIt=boost::xpressive::detail::sub_match_impl<std::_String_const_iterator<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t>>> *
          ]
          c:\boost_1_48_0\boost_1_48_0\boost\xpressive\detail\core\sub_match_vector.hpp(158): クラス テンプレート のメンバー関数 'void boost::xpressive::detail::sub_match_vector<BidiIter>::init_(boost::xpressive::detail::sub_match_impl<BidiIter> *,boost::xpressive::detail::sub_match_vector<BidiIter>::size_type,const boost::xpressive::detail::sub_match_vector<BidiIter> &)' のコンパイル中
          with
          [
              BidiIter=std::_String_const_iterator<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t>>
          ]
          c:\boost_1_48_0\boost_1_48_0\boost\xpressive\match_results.hpp(369) : コンパイルされたクラスの テンプレート のインスタンス化 'boost::xpressive::detail::sub_match_vector<BidiIter>' の参照を確認してください
          with
          [
              BidiIter=std::_String_const_iterator<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t>>
          ]
          c:\users\ryouta\documents\visual studio 2010\projects\openbveeditor\openbveeditor\source\searchcomponents.cpp(48) : コンパイルされたクラスの テンプレート のインスタンス化 'boost::xpressive::match_results<BidiIter>' の参照を確認してください
          with
          [
              BidiIter=std::_String_const_iterator<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t>>
          ]
  Preferences.cpp
  StoredSettings.cpp
c:\users\ryouta\documents\visual studio 2010\projects\openbveeditor\openbveeditor\source\storedsettings.cpp : warning C4819: ファイルは、現在のコード ページ (932) で表示できない文字を含んでいます。データの損失を防ぐために、ファイルを Unicode 形式で保存してください。
  MainComponent.cpp
c:\users\ryouta\documents\visual studio 2010\projects\openbveeditor\openbveeditor\source\maincomponent.cpp : warning C4819: ファイルは、現在のコード ページ (932) で表示できない文字を含んでいます。データの損失を防ぐために、ファイルを Unicode 形式で保存してください。
  CodeEditor.cpp
c:\users\ryouta\documents\visual studio 2010\projects\openbveeditor\openbveeditor\source\codeeditor.cpp : warning C4819: ファイルは、現在のコード ページ (932) で表示できない文字を含んでいます。データの損失を防ぐために、ファイルを Unicode 形式で保存してください。
  BVECode.cpp
c:\users\ryouta\documents\visual studio 2010\projects\openbveeditor\openbveeditor\source\bvecode.cpp : warning C4819: ファイルは、現在のコード ページ (932) で表示できない文字を含んでいます。データの損失を防ぐために、ファイルを Unicode 形式で保存してください。
c:\users\ryouta\documents\visual studio 2010\projects\openbveeditor\openbveeditor\source\bvecode.cpp(353): warning C4100: 'Start' : 引数は関数の本体部で 1 度も参照されません。
c:\program files (x86)\microsoft visual studio 10.0\vc\include\xutility(2813): warning C4996: 'std::_Fill_n': Function call with parameters that may be unsafe - this call relies on the caller to check that the passed values are correct. To disable this warning, use -D_SCL_SECURE_NO_WARNINGS. See documentation on how to use Visual C++ 'Checked Iterators'
          c:\program files (x86)\microsoft visual studio 10.0\vc\include\xutility(2799) : 'std::_Fill_n' の宣言を確認してください。
          c:\boost_1_48_0\boost_1_48_0\boost\xpressive\detail\utility\sequence_stack.hpp(225) : コンパイルされたクラスの テンプレート のインスタンス化 'void std::fill_n<T*,size_t,T>(_OutIt,_Diff,const _Ty &)' の参照を確認してください
          with
          [
              T=boost::xpressive::detail::sub_match_impl<std::_String_const_iterator<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t>>>,
              _OutIt=boost::xpressive::detail::sub_match_impl<std::_String_const_iterator<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t>>> *,
              _Diff=size_t,
              _Ty=boost::xpressive::detail::sub_match_impl<std::_String_const_iterator<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t>>>
          ]
          c:\boost_1_48_0\boost_1_48_0\boost\xpressive\detail\utility\sequence_stack.hpp(223): クラス テンプレート のメンバー関数 'boost::xpressive::detail::sub_match_impl<BidiIter> *boost::xpressive::detail::sequence_stack<T>::push_sequence(size_t,const T &,boost::xpressive::detail::fill_t)' のコンパイル中
          with
          [
              BidiIter=std::_String_const_iterator<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t>>,
              T=boost::xpressive::detail::sub_match_impl<std::_String_const_iterator<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t>>>
          ]
          c:\boost_1_48_0\boost_1_48_0\boost\xpressive\match_results.hpp(96) : コンパイルされたクラスの テンプレート のインスタンス化 'boost::xpressive::detail::sequence_stack<T>' の参照を確認してください
          with
          [
              T=boost::xpressive::detail::sub_match_impl<std::_String_const_iterator<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t>>>
          ]
          c:\boost_1_48_0\boost_1_48_0\boost\xpressive\match_results.hpp(417) : コンパイルされたクラスの テンプレート のインスタンス化 'boost::xpressive::detail::results_extras<BidiIter>' の参照を確認してください
          with
          [
              BidiIter=std::_String_const_iterator<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t>>
          ]
          c:\boost_1_48_0\boost_1_48_0\boost\xpressive\match_results.hpp(401): クラス テンプレート のメンバー関数 'boost::xpressive::match_results<BidiIter>::match_results(const boost::xpressive::match_results<BidiIter> &)' のコンパイル中
          with
          [
              BidiIter=std::_String_const_iterator<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t>>
          ]
          c:\users\ryouta\documents\visual studio 2010\projects\openbveeditor\openbveeditor\source\bvecode.h(57) : コンパイルされたクラスの テンプレート のインスタンス化 'boost::xpressive::match_results<BidiIter>' の参照を確認してください
          with
          [
              BidiIter=std::_String_const_iterator<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t>>
          ]
c:\program files (x86)\microsoft visual studio 10.0\vc\include\xutility(2239): warning C4996: 'std::_Copy_impl': Function call with parameters that may be unsafe - this call relies on the caller to check that the passed values are correct. To disable this warning, use -D_SCL_SECURE_NO_WARNINGS. See documentation on how to use Visual C++ 'Checked Iterators'
          c:\program files (x86)\microsoft visual studio 10.0\vc\include\xutility(2224) : 'std::_Copy_impl' の宣言を確認してください。
          c:\boost_1_48_0\boost_1_48_0\boost\xpressive\detail\core\sub_match_vector.hpp(162) : コンパイルされたクラスの テンプレート のインスタンス化 '_OutIt std::copy<boost::xpressive::detail::sub_match_impl<BidiIter>*,boost::xpressive::detail::sub_match_impl<BidiIter>*>(_InIt,_InIt,_OutIt)' の参照を確認してください
          with
          [
              _OutIt=boost::xpressive::detail::sub_match_impl<std::_String_const_iterator<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t>>> *,
              BidiIter=std::_String_const_iterator<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t>>,
              _InIt=boost::xpressive::detail::sub_match_impl<std::_String_const_iterator<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t>>> *
          ]
          c:\boost_1_48_0\boost_1_48_0\boost\xpressive\detail\core\sub_match_vector.hpp(158): クラス テンプレート のメンバー関数 'void boost::xpressive::detail::sub_match_vector<BidiIter>::init_(boost::xpressive::detail::sub_match_impl<BidiIter> *,boost::xpressive::detail::sub_match_vector<BidiIter>::size_type,const boost::xpressive::detail::sub_match_vector<BidiIter> &)' のコンパイル中
          with
          [
              BidiIter=std::_String_const_iterator<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t>>
          ]
          c:\boost_1_48_0\boost_1_48_0\boost\xpressive\match_results.hpp(369) : コンパイルされたクラスの テンプレート のインスタンス化 'boost::xpressive::detail::sub_match_vector<BidiIter>' の参照を確認してください
          with
          [
              BidiIter=std::_String_const_iterator<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t>>
          ]
c:\program files (x86)\microsoft visual studio 10.0\vc\include\xutility(2813): warning C4996: 'std::_Fill_n': Function call with parameters that may be unsafe - this call relies on the caller to check that the passed values are correct. To disable this warning, use -D_SCL_SECURE_NO_WARNINGS. See documentation on how to use Visual C++ 'Checked Iterators'
          c:\program files (x86)\microsoft visual studio 10.0\vc\include\xutility(2799) : 'std::_Fill_n' の宣言を確認してください。
          c:\boost_1_48_0\boost_1_48_0\boost\xpressive\detail\utility\boyer_moore.hpp(61) : コンパイルされたクラスの テンプレート のインスタンス化 'void std::fill_n<unsigned char*,int,unsigned char>(_OutIt,_Diff,const _Ty &)' の参照を確認してください
          with
          [
              _OutIt=unsigned char *,
              _Diff=int,
              _Ty=unsigned char
          ]
          c:\boost_1_48_0\boost_1_48_0\boost\xpressive\detail\utility\boyer_moore.hpp(48): クラス テンプレート のメンバー関数 'boost::xpressive::detail::boyer_moore<BidiIter,Traits>::boyer_moore(const wchar_t *,const wchar_t *,const Traits &,bool)' のコンパイル中
          with
          [
              BidiIter=std::_String_const_iterator<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t>>,
              Traits=traits_type
          ]
          c:\boost_1_48_0\boost_1_48_0\boost\xpressive\detail\core\finder.hpp(55) : コンパイルされたクラスの テンプレート のインスタンス化 'boost::xpressive::detail::boyer_moore<BidiIter,Traits>' の参照を確認してください
          with
          [
              BidiIter=std::_String_const_iterator<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t>>,
              Traits=traits_type
          ]
          c:\boost_1_48_0\boost_1_48_0\boost\xpressive\detail\core\optimize.hpp(80) : コンパイルされたクラスの テンプレート のインスタンス化 'boost::xpressive::detail::boyer_moore_finder<BidiIter,Traits>' の参照を確認してください
          with
          [
              BidiIter=std::_String_const_iterator<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t>>,
              Traits=traits_type
          ]
          c:\boost_1_48_0\boost_1_48_0\boost\xpressive\detail\core\optimize.hpp(110) : コンパイルされたクラスの テンプレート のインスタンス化 'boost::intrusive_ptr<T> boost::xpressive::detail::optimize_regex<BidiIter,Traits>(const boost::xpressive::detail::xpression_peeker<Char> &,const Traits &,boost::mpl::true_)' の参照を確認してください
          with
          [
              T=boost::xpressive::detail::finder<std::_String_const_iterator<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t>>>,
              BidiIter=std::_String_const_iterator<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t>>,
              Traits=traits_type,
              Char=wchar_t
          ]
          c:\boost_1_48_0\boost_1_48_0\boost\xpressive\detail\static\compile.hpp(53) : コンパイルされたクラスの テンプレート のインスタンス化 'void boost::xpressive::detail::common_compile<BidiIter,Traits>(const boost::intrusive_ptr<T> &,boost::xpressive::detail::regex_impl<BidiIter> &,const Traits &)' の参照を確認してください
          with
          [
              BidiIter=std::_String_const_iterator<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t>>,
              Traits=traits_type,
              T=const boost::xpressive::detail::matchable_ex<std::_String_const_iterator<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t>>>
          ]
          c:\boost_1_48_0\boost_1_48_0\boost\xpressive\detail\static\compile.hpp(79) : コンパイルされたクラスの テンプレート のインスタンス化 'void boost::xpressive::detail::static_compile_impl2<Xpr,BidiIter,traits_type>(const Xpr &,const boost::shared_ptr<T> &,const Traits &)' の参照を確認してください
          with
          [
              Xpr=boost::proto::exprns_::expr<boost::proto::tagns_::tag::bitwise_or,boost::proto::argsns_::list2<const boost::proto::exprns_::expr<boost::proto::tagns_::tag::bitwise_or,boost::proto::argsns_::list2<const boost::proto::exprns_::expr<boost::proto::tagns_::tag::bitwise_or,boost::proto::argsns_::list2<const boost::proto::exprns_::expr<boost::proto::tagns_::tag::bitwise_or,boost::proto::argsns_::list2<const boost::proto::exprns_::expr<boost::proto::tagns_::tag::bitwise_or,boost::proto::argsns_::list2<const boost::proto::exprns_::expr<boost::xpressive::detail::modifier_tag,boost::proto::argsns_::list2<boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<boost::xpressive::detail::icase_modifier>,0>,boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<const wchar_t (&)[3]>,0>>,2> &,const boost::proto::exprns_::expr<boost::xpressive::detail::modifier_tag,boost::proto::argsns_::list2<boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<boost::xpressive::detail::icase_modifier>,0>,boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<const wchar_t (&)[5]>,0>>,2> &>,2> &,const boost::proto::exprns_::expr<boost::xpressive::detail::modifier_tag,boost::proto::argsns_::list2<boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<boost::xpressive::detail::icase_modifier>,0>,boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<const wchar_t (&)[6]>,0>>,2> &>,2> &,const boost::proto::exprns_::expr<boost::xpressive::detail::modifier_tag,boost::proto::argsns_::list2<boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<boost::xpressive::detail::icase_modifier>,0>,boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<const wchar_t (&)[8]>,0>>,2> &>,2> &,const boost::proto::exprns_::expr<boost::xpressive::detail::modifier_tag,boost::proto::argsns_::list2<boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<boost::xpressive::detail::icase_modifier>,0>,boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<const wchar_t (&)[4]>,0>>,2> &>,2> &,const boost::proto::exprns_::expr<boost::xpressive::detail::modifier_tag,boost::proto::argsns_::list2<boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<boost::xpressive::detail::icase_modifier>,0>,boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<const wchar_t (&)[4]>,0>>,2> &>,2>,
              BidiIter=std::_String_const_iterator<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t>>,
              T=boost::xpressive::detail::regex_impl<std::_String_const_iterator<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t>>>,
              Traits=traits_type
          ]
          c:\boost_1_48_0\boost_1_48_0\boost\xpressive\detail\static\compile.hpp(99) : コンパイルされたクラスの テンプレート のインスタンス化 'void boost::xpressive::detail::static_compile_impl1<Xpr,BidiIter>(const Xpr &,const boost::shared_ptr<T> &)' の参照を確認してください
          with
          [
              Xpr=boost::proto::exprns_::expr<boost::proto::tagns_::tag::bitwise_or,boost::proto::argsns_::list2<const boost::proto::exprns_::expr<boost::proto::tagns_::tag::bitwise_or,boost::proto::argsns_::list2<const boost::proto::exprns_::expr<boost::proto::tagns_::tag::bitwise_or,boost::proto::argsns_::list2<const boost::proto::exprns_::expr<boost::proto::tagns_::tag::bitwise_or,boost::proto::argsns_::list2<const boost::proto::exprns_::expr<boost::proto::tagns_::tag::bitwise_or,boost::proto::argsns_::list2<const boost::proto::exprns_::expr<boost::xpressive::detail::modifier_tag,boost::proto::argsns_::list2<boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<boost::xpressive::detail::icase_modifier>,0>,boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<const wchar_t (&)[3]>,0>>,2> &,const boost::proto::exprns_::expr<boost::xpressive::detail::modifier_tag,boost::proto::argsns_::list2<boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<boost::xpressive::detail::icase_modifier>,0>,boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<const wchar_t (&)[5]>,0>>,2> &>,2> &,const boost::proto::exprns_::expr<boost::xpressive::detail::modifier_tag,boost::proto::argsns_::list2<boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<boost::xpressive::detail::icase_modifier>,0>,boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<const wchar_t (&)[6]>,0>>,2> &>,2> &,const boost::proto::exprns_::expr<boost::xpressive::detail::modifier_tag,boost::proto::argsns_::list2<boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<boost::xpressive::detail::icase_modifier>,0>,boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<const wchar_t (&)[8]>,0>>,2> &>,2> &,const boost::proto::exprns_::expr<boost::xpressive::detail::modifier_tag,boost::proto::argsns_::list2<boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<boost::xpressive::detail::icase_modifier>,0>,boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<const wchar_t (&)[4]>,0>>,2> &>,2> &,const boost::proto::exprns_::expr<boost::xpressive::detail::modifier_tag,boost::proto::argsns_::list2<boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<boost::xpressive::detail::icase_modifier>,0>,boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<const wchar_t (&)[4]>,0>>,2> &>,2>,
              BidiIter=std::_String_const_iterator<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t>>,
              T=boost::xpressive::detail::regex_impl<std::_String_const_iterator<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t>>>
          ]
          c:\boost_1_48_0\boost_1_48_0\boost\xpressive\basic_regex.hpp(252) : コンパイルされたクラスの テンプレート のインスタンス化 'void boost::xpressive::detail::static_compile<Expr,BidiIter>(const Xpr &,const boost::shared_ptr<T> &)' の参照を確認してください
          with
          [
              Expr=boost::proto::exprns_::expr<boost::proto::tagns_::tag::bitwise_or,boost::proto::argsns_::list2<const boost::proto::exprns_::expr<boost::proto::tagns_::tag::bitwise_or,boost::proto::argsns_::list2<const boost::proto::exprns_::expr<boost::proto::tagns_::tag::bitwise_or,boost::proto::argsns_::list2<const boost::proto::exprns_::expr<boost::proto::tagns_::tag::bitwise_or,boost::proto::argsns_::list2<const boost::proto::exprns_::expr<boost::proto::tagns_::tag::bitwise_or,boost::proto::argsns_::list2<const boost::proto::exprns_::expr<boost::xpressive::detail::modifier_tag,boost::proto::argsns_::list2<boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<boost::xpressive::detail::icase_modifier>,0>,boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<const wchar_t (&)[3]>,0>>,2> &,const boost::proto::exprns_::expr<boost::xpressive::detail::modifier_tag,boost::proto::argsns_::list2<boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<boost::xpressive::detail::icase_modifier>,0>,boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<const wchar_t (&)[5]>,0>>,2> &>,2> &,const boost::proto::exprns_::expr<boost::xpressive::detail::modifier_tag,boost::proto::argsns_::list2<boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<boost::xpressive::detail::icase_modifier>,0>,boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<const wchar_t (&)[6]>,0>>,2> &>,2> &,const boost::proto::exprns_::expr<boost::xpressive::detail::modifier_tag,boost::proto::argsns_::list2<boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<boost::xpressive::detail::icase_modifier>,0>,boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<const wchar_t (&)[8]>,0>>,2> &>,2> &,const boost::proto::exprns_::expr<boost::xpressive::detail::modifier_tag,boost::proto::argsns_::list2<boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<boost::xpressive::detail::icase_modifier>,0>,boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<const wchar_t (&)[4]>,0>>,2> &>,2> &,const boost::proto::exprns_::expr<boost::xpressive::detail::modifier_tag,boost::proto::argsns_::list2<boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<boost::xpressive::detail::icase_modifier>,0>,boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<const wchar_t (&)[4]>,0>>,2> &>,2>,
              BidiIter=std::_String_const_iterator<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t>>,
              Xpr=boost::proto::exprns_::expr<boost::proto::tagns_::tag::bitwise_or,boost::proto::argsns_::list2<const boost::proto::exprns_::expr<boost::proto::tagns_::tag::bitwise_or,boost::proto::argsns_::list2<const boost::proto::exprns_::expr<boost::proto::tagns_::tag::bitwise_or,boost::proto::argsns_::list2<const boost::proto::exprns_::expr<boost::proto::tagns_::tag::bitwise_or,boost::proto::argsns_::list2<const boost::proto::exprns_::expr<boost::proto::tagns_::tag::bitwise_or,boost::proto::argsns_::list2<const boost::proto::exprns_::expr<boost::xpressive::detail::modifier_tag,boost::proto::argsns_::list2<boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<boost::xpressive::detail::icase_modifier>,0>,boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<const wchar_t (&)[3]>,0>>,2> &,const boost::proto::exprns_::expr<boost::xpressive::detail::modifier_tag,boost::proto::argsns_::list2<boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<boost::xpressive::detail::icase_modifier>,0>,boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<const wchar_t (&)[5]>,0>>,2> &>,2> &,const boost::proto::exprns_::expr<boost::xpressive::detail::modifier_tag,boost::proto::argsns_::list2<boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<boost::xpressive::detail::icase_modifier>,0>,boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<const wchar_t (&)[6]>,0>>,2> &>,2> &,const boost::proto::exprns_::expr<boost::xpressive::detail::modifier_tag,boost::proto::argsns_::list2<boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<boost::xpressive::detail::icase_modifier>,0>,boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<const wchar_t (&)[8]>,0>>,2> &>,2> &,const boost::proto::exprns_::expr<boost::xpressive::detail::modifier_tag,boost::proto::argsns_::list2<boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<boost::xpressive::detail::icase_modifier>,0>,boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<const wchar_t (&)[4]>,0>>,2> &>,2> &,const boost::proto::exprns_::expr<boost::xpressive::detail::modifier_tag,boost::proto::argsns_::list2<boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<boost::xpressive::detail::icase_modifier>,0>,boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<const wchar_t (&)[4]>,0>>,2> &>,2>,
              T=boost::xpressive::detail::regex_impl<std::_String_const_iterator<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t>>>
          ]
          c:\boost_1_48_0\boost_1_48_0\boost\xpressive\basic_regex.hpp(133) : コンパイルされたクラスの テンプレート のインスタンス化 'void boost::xpressive::basic_regex<BidiIter>::compile_<Expr>(const Expr &,boost::mpl::true_)' の参照を確認してください
          with
          [
              BidiIter=std::_String_const_iterator<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t>>,
              Expr=boost::proto::exprns_::expr<boost::proto::tagns_::tag::bitwise_or,boost::proto::argsns_::list2<const boost::proto::exprns_::expr<boost::proto::tagns_::tag::bitwise_or,boost::proto::argsns_::list2<const boost::proto::exprns_::expr<boost::proto::tagns_::tag::bitwise_or,boost::proto::argsns_::list2<const boost::proto::exprns_::expr<boost::proto::tagns_::tag::bitwise_or,boost::proto::argsns_::list2<const boost::proto::exprns_::expr<boost::proto::tagns_::tag::bitwise_or,boost::proto::argsns_::list2<const boost::proto::exprns_::expr<boost::xpressive::detail::modifier_tag,boost::proto::argsns_::list2<boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<boost::xpressive::detail::icase_modifier>,0>,boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<const wchar_t (&)[3]>,0>>,2> &,const boost::proto::exprns_::expr<boost::xpressive::detail::modifier_tag,boost::proto::argsns_::list2<boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<boost::xpressive::detail::icase_modifier>,0>,boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<const wchar_t (&)[5]>,0>>,2> &>,2> &,const boost::proto::exprns_::expr<boost::xpressive::detail::modifier_tag,boost::proto::argsns_::list2<boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<boost::xpressive::detail::icase_modifier>,0>,boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<const wchar_t (&)[6]>,0>>,2> &>,2> &,const boost::proto::exprns_::expr<boost::xpressive::detail::modifier_tag,boost::proto::argsns_::list2<boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<boost::xpressive::detail::icase_modifier>,0>,boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<const wchar_t (&)[8]>,0>>,2> &>,2> &,const boost::proto::exprns_::expr<boost::xpressive::detail::modifier_tag,boost::proto::argsns_::list2<boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<boost::xpressive::detail::icase_modifier>,0>,boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<const wchar_t (&)[4]>,0>>,2> &>,2> &,const boost::proto::exprns_::expr<boost::xpressive::detail::modifier_tag,boost::proto::argsns_::list2<boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<boost::xpressive::detail::icase_modifier>,0>,boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<const wchar_t (&)[4]>,0>>,2> &>,2>
          ]
          c:\users\ryouta\documents\visual studio 2010\projects\openbveeditor\openbveeditor\source\bvecode.cpp(397) : コンパイルされたクラスの テンプレート のインスタンス化 'boost::xpressive::basic_regex<BidiIter> &boost::xpressive::basic_regex<BidiIter>::operator =<boost::proto::exprns_::expr<Tag,Args,Arity>>(const Expr &)' の参照を確認してください
          with
          [
              BidiIter=std::_String_const_iterator<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t>>,
              Tag=boost::proto::tagns_::tag::bitwise_or,
              Args=boost::proto::argsns_::list2<const boost::proto::exprns_::expr<boost::proto::tagns_::tag::bitwise_or,boost::proto::argsns_::list2<const boost::proto::exprns_::expr<boost::proto::tagns_::tag::bitwise_or,boost::proto::argsns_::list2<const boost::proto::exprns_::expr<boost::proto::tagns_::tag::bitwise_or,boost::proto::argsns_::list2<const boost::proto::exprns_::expr<boost::proto::tagns_::tag::bitwise_or,boost::proto::argsns_::list2<const boost::proto::exprns_::expr<boost::xpressive::detail::modifier_tag,boost::proto::argsns_::list2<boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<boost::xpressive::detail::icase_modifier>,0>,boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<const wchar_t (&)[3]>,0>>,2> &,const boost::proto::exprns_::expr<boost::xpressive::detail::modifier_tag,boost::proto::argsns_::list2<boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<boost::xpressive::detail::icase_modifier>,0>,boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<const wchar_t (&)[5]>,0>>,2> &>,2> &,const boost::proto::exprns_::expr<boost::xpressive::detail::modifier_tag,boost::proto::argsns_::list2<boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<boost::xpressive::detail::icase_modifier>,0>,boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<const wchar_t (&)[6]>,0>>,2> &>,2> &,const boost::proto::exprns_::expr<boost::xpressive::detail::modifier_tag,boost::proto::argsns_::list2<boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<boost::xpressive::detail::icase_modifier>,0>,boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<const wchar_t (&)[8]>,0>>,2> &>,2> &,const boost::proto::exprns_::expr<boost::xpressive::detail::modifier_tag,boost::proto::argsns_::list2<boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<boost::xpressive::detail::icase_modifier>,0>,boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<const wchar_t (&)[4]>,0>>,2> &>,2> &,const boost::proto::exprns_::expr<boost::xpressive::detail::modifier_tag,boost::proto::argsns_::list2<boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<boost::xpressive::detail::icase_modifier>,0>,boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<const wchar_t (&)[4]>,0>>,2> &>,
              Arity=2,
              Expr=boost::proto::exprns_::expr<boost::proto::tagns_::tag::bitwise_or,boost::proto::argsns_::list2<const boost::proto::exprns_::expr<boost::proto::tagns_::tag::bitwise_or,boost::proto::argsns_::list2<const boost::proto::exprns_::expr<boost::proto::tagns_::tag::bitwise_or,boost::proto::argsns_::list2<const boost::proto::exprns_::expr<boost::proto::tagns_::tag::bitwise_or,boost::proto::argsns_::list2<const boost::proto::exprns_::expr<boost::proto::tagns_::tag::bitwise_or,boost::proto::argsns_::list2<const boost::proto::exprns_::expr<boost::xpressive::detail::modifier_tag,boost::proto::argsns_::list2<boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<boost::xpressive::detail::icase_modifier>,0>,boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<const wchar_t (&)[3]>,0>>,2> &,const boost::proto::exprns_::expr<boost::xpressive::detail::modifier_tag,boost::proto::argsns_::list2<boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<boost::xpressive::detail::icase_modifier>,0>,boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<const wchar_t (&)[5]>,0>>,2> &>,2> &,const boost::proto::exprns_::expr<boost::xpressive::detail::modifier_tag,boost::proto::argsns_::list2<boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<boost::xpressive::detail::icase_modifier>,0>,boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<const wchar_t (&)[6]>,0>>,2> &>,2> &,const boost::proto::exprns_::expr<boost::xpressive::detail::modifier_tag,boost::proto::argsns_::list2<boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<boost::xpressive::detail::icase_modifier>,0>,boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<const wchar_t (&)[8]>,0>>,2> &>,2> &,const boost::proto::exprns_::expr<boost::xpressive::detail::modifier_tag,boost::proto::argsns_::list2<boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<boost::xpressive::detail::icase_modifier>,0>,boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<const wchar_t (&)[4]>,0>>,2> &>,2> &,const boost::proto::exprns_::expr<boost::xpressive::detail::modifier_tag,boost::proto::argsns_::list2<boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<boost::xpressive::detail::icase_modifier>,0>,boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<const wchar_t (&)[4]>,0>>,2> &>,2>
          ]
  MainWindow.cpp
c:\juce_1_54\juce\juce_amalgamated.h(10444): warning C4150: 'Preferences' 型を削除するため delete 演算子が呼び出されましたが、定義がありません。
          c:\users\ryouta\documents\visual studio 2010\projects\openbveeditor\openbveeditor\source\maincomponent.h(38) : 'Preferences' の宣言を確認してください。
          c:\juce_1_54\juce\juce_amalgamated.h(10444): クラス テンプレート のメンバー関数 'juce::ScopedPointer<ObjectType>::~ScopedPointer(void)' のコンパイル中
          with
          [
              ObjectType=Preferences
          ]
          c:\users\ryouta\documents\visual studio 2010\projects\openbveeditor\openbveeditor\source\maincomponent.h(93) : コンパイルされたクラスの テンプレート のインスタンス化 'juce::ScopedPointer<ObjectType>' の参照を確認してください
          with
          [
              ObjectType=Preferences
          ]
c:\juce_1_54\juce\juce_amalgamated.h(10444): warning C4150: 'SearchDialog' 型を削除するため delete 演算子が呼び出されましたが、定義がありません。
          c:\users\ryouta\documents\visual studio 2010\projects\openbveeditor\openbveeditor\source\maincomponent.h(39) : 'SearchDialog' の宣言を確認してください。
          c:\juce_1_54\juce\juce_amalgamated.h(10444): クラス テンプレート のメンバー関数 'juce::ScopedPointer<ObjectType>::~ScopedPointer(void)' のコンパイル中
          with
          [
              ObjectType=SearchDialog
          ]
          c:\users\ryouta\documents\visual studio 2010\projects\openbveeditor\openbveeditor\source\maincomponent.h(94) : コンパイルされたクラスの テンプレート のインスタンス化 'juce::ScopedPointer<ObjectType>' の参照を確認してください
          with
          [
              ObjectType=SearchDialog
          ]
c:\juce_1_54\juce\juce_amalgamated.h(10444): warning C4150: 'FindReplaceFunctionality' 型を削除するため delete 演算子が呼び出されましたが、定義がありません。
          c:\users\ryouta\documents\visual studio 2010\projects\openbveeditor\openbveeditor\source\maincomponent.h(40) : 'FindReplaceFunctionality' の宣言を確認してください。
          c:\juce_1_54\juce\juce_amalgamated.h(10444): クラス テンプレート のメンバー関数 'juce::ScopedPointer<ObjectType>::~ScopedPointer(void)' のコンパイル中
          with
          [
              ObjectType=FindReplaceFunctionality
          ]
          c:\users\ryouta\documents\visual studio 2010\projects\openbveeditor\openbveeditor\source\maincomponent.h(96) : コンパイルされたクラスの テンプレート のインスタンス化 'juce::ScopedPointer<ObjectType>' の参照を確認してください
          with
          [
              ObjectType=FindReplaceFunctionality
          ]
  Main.cpp
  JuceLibraryCode1.cpp
  JuceLibraryCode2.cpp
  JuceLibraryCode3.cpp
  JuceLibraryCode4.cpp
  コードを生成中...
VariousTools.obj : warning LNK4075: /EDITANDCONTINUE は /INCREMENTAL:NO の指定によって無視されます。
  OpenBVEEditor.vcxproj -> C:\Users\Ryouta\Documents\Visual Studio 2010\Projects\OpenBVEEditor\OpenBVEEditor\Builds\VisualStudio2010\.\Debug\OpenBVEEditor.exe
